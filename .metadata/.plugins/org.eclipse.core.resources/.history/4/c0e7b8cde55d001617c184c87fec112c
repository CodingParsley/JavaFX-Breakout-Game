package application;

import javafx.stage.Stage;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.layout.Pane;
import javafx.scene.shape.Rectangle;
import javafx.application.Application;

import java.util.Optional;

import gameComponenets.Variables;

public class LevelsScreenView extends Application {
	private Stage window;
	private Scene scene;
	private Pane layout;

	public LevelsScreenView(LevelsScreenModel lsm){

	}
	@Override
	public void start(Stage primaryStage) throws Exception {
		window = primaryStage;
		window.setResizable(false);

		layout = new Pane();

		scene = new Scene(layout, Variables.getWIDTH(), Variables.getHEIGHT());

		window.setScene(scene);
		window.show();
	}

	public void drawArrayOfButtons(gameComponenets.Button[][] buttonArray) {
		// find a graphical rectangle in children where r.Id = gr.Id
		// if it isn't there, create one and add it to children
		// then...
		//
		// gr.setwidth, etc. according to r
		for (int column = 0; column < buttonArray.length; column++) {

			for (int row = 0; row < buttonArray[column].length; row++) {

				gameComponenets.Button b = buttonArray[column][row];
				Optional<Node> graphicalRectNode = layout.getChildren().stream().filter(n -> n instanceof Rectangle)
						.filter(n -> n.getId().equals(Integer.toString(b.getId()))).findFirst();
				Rectangle graphicalRect = null;
				if (graphicalRectNode.isPresent()) {
					graphicalRect = (Rectangle) (graphicalRectNode.get());
				} else {
					graphicalRect = new Rectangle();
					layout.getChildren().add(graphicalRect);
				}
				// If statements are here for making the rectangle graphical

				graphicalRect.setId(Integer.toString(b.getId()));
				graphicalRect.setWidth(b.getWidth());
				graphicalRect.setHeight(b.getHeight());
				graphicalRect.setTranslateX(b.getTopLeftCoordinate().getX());
				graphicalRect.setTranslateY(b.getTopLeftCoordinate().getY());
				graphicalRect.setOnMouseClicked(e -> {
					b.getDoesSomething().run();
				});
			}
		}

	}
}
