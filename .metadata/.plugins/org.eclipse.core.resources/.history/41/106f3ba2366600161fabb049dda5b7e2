package gameComponents;

public class PhotonBlasters {
	private Rectangle rightBlaster;
	private Rectangle leftBlaster;
	private double width = 15;
	private double height = 30;
//	protected Packet(Coordinate topLeft, double width, double height, int id, RectangleType type, double speed, boolean consumed) {
//		super(topLeft, width, height, id, type);
//		this.speed = speed;
//		this.consumed=consumed;
//	}
	protected PhotonBlasters(double batWidth, Coordinate batTopLeft) {
		double yPosition = batTopLeft.getY() - height;
		Coordinate leftBlasterTopLeft = new Coordinate(batTopLeft.getX(), yPosition);
		Coordinate rightBlasterTopLeft = new Coordinate(batTopLeft.getX() + batWidth, yPosition);
		leftBlaster = new Rectangle(leftBlasterTopLeft, width, height, RectangleType.PhotonBlaster);
		rightBlaster = new Rectangle(rightBlasterTopLeft, width, height, RectangleType.PhotonBlaster);
	}

	protected PhotonBlasters(double batWidth, Coordinate batTopLeft, int leftBlasterId,int rightBlasterId) {
		double yPosition = batTopLeft.getY() - height;
		Coordinate leftBlasterTopLeft = new Coordinate(batTopLeft.getX(), yPosition);
		Coordinate rightBlasterTopLeft = new Coordinate(batTopLeft.getX() + batWidth, yPosition);
		leftBlaster = new Rectangle(leftBlasterTopLeft, width, height, leftBlasterId, RectangleType.PhotonBlaster);
		rightBlaster = new Rectangle(rightBlasterTopLeft, width, height, rightBlasterId, RectangleType.PhotonBlaster);
	}

	public PhotonBlasters getMove(double batWidth, Coordinate batTopLeft) {
		return new PhotonBlasters(batWidth,batTopLeft,9);
	}

	public Rectangle getRightBlaster() {
		return rightBlaster;
	}

	public Rectangle getLeftBlaster() {
		return leftBlaster;
	}

	public double getWidth() {
		return width;
	}

	public double getHeight() {
		return height;
	}
}