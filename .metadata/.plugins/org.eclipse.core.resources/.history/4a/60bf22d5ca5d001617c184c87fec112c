package application;

import gameComponenets.Coordinate;
import gameComponenets.GameBoardModel;
import gameComponenets.JavaCollisionDetector;
import gameComponenets.RectangleType;
import gameComponenets.Button;
import gameComponenets.Variables;
public class LevelsScreenModel {
	private int numButtonRows;
	private int numButtonColumns;
	private GameBoardModel selectedLevel;
	private int buttonGapH;
	private int buttonGapV;
	private int brickRowHeight;
	private int brickColumnWidth;
	private Button[][] arrayButtons;

	public LevelsScreenModel(int rows, int columns, int buttonSize) {
		this.numButtonRows = rows;
		this.numButtonColumns = columns;
		int count = 1;

		buttonGapH = (Variables.getWIDTH() - (buttonSize * numButtonColumns)) / (numButtonColumns + 1);
		buttonGapV = (Variables.getHEIGHT() - (buttonSize * numButtonRows)) / (numButtonRows + 1);

		brickRowHeight = buttonSize+buttonGapV;
		brickColumnWidth = buttonSize+buttonGapH;

		arrayButtons = new Button[numButtonColumns][numButtonRows];

		// Set buttons
		for (int column = 0; column < numButtonColumns; column++) {
			for (int row = 0; row < numButtonRows; row++) {
				Button b = new Button(
						new Coordinate(column * brickColumnWidth + (buttonGapH+5), row * brickRowHeight + buttonGapH),
						buttonSize, buttonSize, RectangleType.LevelButton, count);
				count  +=1;
				arrayButtons[column][row] = b;
			}
		}
	}

	public Button[][] getButtons() {
		return arrayButtons;
	}

	public int getLevelOf(Button b) {
		System.out.println(b.getOnAction());
		return b.getOnAction();
	}

}
class SecondLevels {
	JavaCollisionDetector jcd = new JavaCollisionDetector();
	public GameBoardModel level1= new GameBoardModel(
			500,// Screen Width
			500,// Screen Height
			50,// Brick Height
			30,// Horizontal Brick Gap
			30,// Vertical Brick Gap
			100,// Gap above bricks
			2,// # of Columns
			2,// # of Rows
			100,// Bat Width
			20,// Bat Height
			8,// Bat Speed
			1, //Ball Speed
			jcd);


	GameBoardModel level2= new GameBoardModel(
			500,// Screen Width
			500,// Screen Height
			50,// Brick Height
			30,// Horizontal Brick Gap
			30,// Vertical Brick Gap
			100,// Gap above bricks
			4,// # of Columns
			4,// # of Rows
			100,// Bat Width
			20,// Bat Height
			8,// Bat Speed
			1, //Ball Speed
			jcd);
	GameBoardModel level3= new GameBoardModel(
			500,// Screen Width
			500,// Screen Height
			40,// Brick Height
			10,// Horizontal Brick Gap
			3,// Vertical Brick Gap
			30,// Gap above bricks
			10,// # of Columns
			2,// # of Rows
			100,// Bat Width
			20,// Bat Height
			8,// Bat Speed
			1, //Ball Speed
			jcd);
}

